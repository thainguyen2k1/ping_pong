/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef STARTSCREENVIEWBASE_HPP
#define STARTSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/startscreen_screen/StartScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>

#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>

#include <touchgfx/widgets/TiledImage.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>


class StartScreenViewBase : public touchgfx::View<StartScreenPresenter>
{
public:
    StartScreenViewBase();
    virtual ~StartScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;

    touchgfx::ScalableImage scalableImage1;
    touchgfx::ButtonWithLabel buttonWithLabel1;
    touchgfx::TiledImage tiledImage1;
    touchgfx::TextArea textArea1;
    touchgfx::IconButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton1;


private:

    /*
     * Callback Declarations
     */

    touchgfx::Callback<StartScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;



    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);


};

#endif // STARTSCREENVIEWBASE_HPP
