/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/gamescreen_screen/GameScreenViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

GameScreenViewBase::GameScreenViewBase() :
    flexButtonCallback(this, &GameScreenViewBase::flexButtonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box1.setPosition(0, 0, 240, 320);
    box1.setColor(touchgfx::Color::getColorFromRGB(2, 62, 97));
    add(box1);

    line1_2.setPosition(88, 300, 70, 10);
    line1_2Painter.setColor(touchgfx::Color::getColorFromRGB(62, 235, 35));
    line1_2.setPainter(line1_2Painter);
    line1_2.setStart(5, 5);
    line1_2.setEnd(65, 5);
    line1_2.setLineWidth(10);
    line1_2.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(line1_2);

    line1_1.setPosition(85, 10, 70, 10);
    line1_1Painter.setColor(touchgfx::Color::getColorFromRGB(242, 15, 15));
    line1_1.setPainter(line1_1Painter);
    line1_1.setStart(5, 5);
    line1_1.setEnd(65, 5);
    line1_1.setLineWidth(10);
    line1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(line1_1);

    textArea2.setPosition(0, 110, 20, 30);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea2.setLinespacing(0);
    textArea2.setRotation(touchgfx::TEXT_ROTATE_270);
    Unicode::snprintf(textArea2Buffer, TEXTAREA2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_WWJI).getText());
    textArea2.setWildcard(textArea2Buffer);
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OJ6F));
    add(textArea2);

    textArea2_1.setPosition(0, 165, 20, 30);
    textArea2_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea2_1.setLinespacing(0);
    textArea2_1.setRotation(touchgfx::TEXT_ROTATE_270);
    Unicode::snprintf(textArea2_1Buffer, TEXTAREA2_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_D5MS).getText());
    textArea2_1.setWildcard(textArea2_1Buffer);
    textArea2_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4WXM));
    add(textArea2_1);

    line1.setPosition(0, 158, 240, 4);
    line1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    line1.setPainter(line1Painter);
    line1.setStart(5, 5);
    line1.setEnd(235, 5);
    line1.setLineWidth(10);
    line1.setLineEndingStyle(touchgfx::Line::SQUARE_CAP_ENDING);
    add(line1);

    circle2.setPosition(116, 156, 8, 8);
    circle2.setCenter(4, 4);
    circle2.setRadius(4);
    circle2.setLineWidth(0);
    circle2.setArc(0, 360);
    circle2Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    circle2.setPainter(circle2Painter);
    add(circle2);

    circle1.setPosition(110, 150, 20, 20);
    circle1.setCenter(10, 10);
    circle1.setRadius(10);
    circle1.setLineWidth(0);
    circle1.setArc(0, 360);
    circle1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 0));
    circle1.setPainter(circle1Painter);
    add(circle1);

    flexButton1.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_HOME_35_35_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_35_35_E8F6FB_SVG_ID));
    flexButton1.setIconXY(0, 0);
    flexButton1.setAction(flexButtonCallback);
    flexButton1.setPosition(205, 125, 35, 35);
    add(flexButton1);
}

GameScreenViewBase::~GameScreenViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void GameScreenViewBase::setupScreen()
{

}

void GameScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1)
    {
        //Interaction3
        //When flexButton1 clicked change screen to StartScreen
        //Go to StartScreen with block transition
        application().gotoStartScreenScreenBlockTransition();
    }
}

void GameScreenViewBase::handleTickEvent()
{
    //Interaction1
    //When every N tick call virtual function
    //Call handleTick
    handleTick();
}

void GameScreenViewBase::goToOverScreen()
{
    //Interaction2
    //When goToOverScreen is called change screen to OverScreen
    //Go to OverScreen with screen transition towards East
    application().gotoOverScreenScreenCoverTransitionEast();
}
